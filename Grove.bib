
@inproceedings{omar_hazelnut_2017,
	title = {Hazelnut: {A} {Bidirectionally} {Typed} {Structure} {Editor} {Calculus}},
	booktitle = {44th {ACM} {SIGPLAN} {Symposium} on {Principles} of {Programming} {Languages} ({POPL} 2017)},
	author = {Omar, Cyrus and Voysey, Ian and Hilton, Michael and Aldrich, Jonathan and Hammer, Matthew A.},
	year = {2017},
	file = {arXiv Fulltext PDF:C\:\\Users\\dedbo\\Zotero\\storage\\7S5CSX6L\\Omar et al. - 2017 - Hazelnut A Bidirectionally Typed Structure Editor.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\dedbo\\Zotero\\storage\\BPVLS789\\1607.html:text/html},
}

@book{chacon_pro_2014,
	title = {Pro git},
	publisher = {Springer Nature},
	author = {Chacon, Scott and Straub, Ben},
	year = {2014},
}

@misc{noauthor_use_nodate,
	title = {Use {Microsoft} {Live} {Share} to collaborate with {Visual} {Studio} {Code}},
	url = {https://code.visualstudio.com/learn/collaboration/live-share},
	abstract = {Use Microsoft Live Share to collaborate with Visual Studio Code},
	language = {en},
	urldate = {2021-06-29},
	file = {Snapshot:C\:\\Users\\dedbo\\Zotero\\storage\\APDNVGY9\\live-share.html:text/html},
}

@article{resnick_scratch_2009,
	title = {Scratch: programming for all},
	volume = {52},
	url = {https://doi.org/10.1145/1592761.1592779},
	doi = {10.1145/1592761.1592779},
	number = {11},
	journal = {Commun. ACM},
	author = {Resnick, Mitchel and Maloney, John H. and Monroy-Hernández, Andrés and Rusk, Natalie and Eastmond, Evelyn and Brennan, Karen and Millner, Amon and Rosenbaum, Eric and Silver, Jay S. and Silverman, Brian and Kafai, Yasmin B.},
	year = {2009},
	pages = {60--67},
}

@inproceedings{voelter_language_2011,
	title = {Language and {IDE} {Modularization} and {Composition} with {MPS}},
	booktitle = {International {Summer} {School} on {Generative} and {Transformational} {Techniques} in {Software} {Engineering}},
	publisher = {Springer},
	author = {Voelter, Markus},
	year = {2011},
	pages = {383--430},
}

@misc{noauthor_webflow_nodate,
	title = {Webflow: {The} no-code platform for web design and development},
	shorttitle = {Webflow},
	url = {https://webflow.com/},
	abstract = {Webflow empowers web designers to build professional, responsive, and custom websites in a completely visual canvas with no code. Try Webflow for free!},
	language = {en},
	urldate = {2021-06-29},
	file = {Snapshot:C\:\\Users\\dedbo\\Zotero\\storage\\QSRWVQDF\\webflow.com.html:text/html},
}

@article{kruskal_efficient_1990,
	title = {Efficient parallel algorithms for graph problems},
	volume = {5},
	issn = {1432-0541},
	url = {https://doi.org/10.1007/BF01840376},
	doi = {10.1007/BF01840376},
	abstract = {We present an efficient technique for parallel manipulation of data structures that avoids memory access conflicts. That is, this technique works on the Exclusive Read/Exclusive Write (EREW) model of computation, which is the weakest shared memory, MIMD machine model. It is used in a new parallel radix sort algorithm that is optimal for keys whose values are over a small range. Using the radix sort and known results for parallel prefix on linked lists, we develop parallel algorithms that efficiently solve various computations on trees and “unicycular graphs.” Finally, we develop parallel algorithms for connected components, spanning trees, minimum spanning trees, and other graph problems. All of the graph algorithms achieve linear speedup for all but the sparsest graphs.},
	language = {en},
	number = {1},
	urldate = {2021-07-02},
	journal = {Algorithmica},
	author = {Kruskal, Clyde P. and Rudolph, Larry and Snir, Marc},
	month = jun,
	year = {1990},
	pages = {43--64},
	file = {Springer Full Text PDF:C\:\\Users\\dedbo\\Zotero\\storage\\CXKK3VW2\\Kruskal et al. - 1990 - Efficient parallel algorithms for graph problems.pdf:application/pdf},
}

@inproceedings{shapiro_conflict-free_2011,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Conflict-{Free} {Replicated} {Data} {Types}},
	isbn = {978-3-642-24550-3},
	doi = {10.1007/978-3-642-24550-3_29},
	abstract = {Replicating data under Eventual Consistency (EC) allows any replica to accept updates without remote synchronisation. This ensures performance and scalability in large-scale distributed systems (e.g., clouds). However, published EC approaches are ad-hoc and error-prone. Under a formal Strong Eventual Consistency (SEC) model, we study sufficient conditions for convergence. A data type that satisfies these conditions is called a Conflict-free Replicated Data Type (CRDT). Replicas of any CRDT are guaranteed to converge in a self-stabilising manner, despite any number of failures. This paper formalises two popular approaches (state- and operation-based) and their relevant sufficient conditions. We study a number of useful CRDTs, such as sets with clean semantics, supporting both add and remove operations, and consider in depth the more complex Graph data type. CRDT types can be composed to develop large-scale distributed applications, and have interesting theoretical properties.},
	language = {en},
	booktitle = {Stabilization, {Safety}, and {Security} of {Distributed} {Systems}},
	publisher = {Springer},
	author = {Shapiro, Marc and Preguiça, Nuno and Baquero, Carlos and Zawirski, Marek},
	editor = {Défago, Xavier and Petit, Franck and Villain, Vincent},
	year = {2011},
	keywords = {Eventual Consistency, Large-Scale Distributed Systems, Replicated Shared Objects},
	pages = {386--400},
	file = {Springer Full Text PDF:C\:\\Users\\dedbo\\Zotero\\storage\\735WZURY\\Shapiro et al. - 2011 - Conflict-Free Replicated Data Types.pdf:application/pdf},
}
